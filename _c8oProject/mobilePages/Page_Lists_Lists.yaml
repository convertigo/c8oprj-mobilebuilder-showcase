preloadPriority: high
scriptContent: 
  - xmlizable: 
    - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
    - com.twinsoft.convertigo.beans.common.FormatedContent: 
      →: |
        /*Begin_c8o_PageImport*/
        /*End_c8o_PageImport*/
        /*Begin_c8o_PageDeclaration*/
        	public groupedPeople = [];
        	/*End_c8o_PageDeclaration*/
        /*Begin_c8o_PageConstructor*/
        		/*End_c8o_PageConstructor*/
        /*Begin_c8o_PageFunction*/
        	/*End_c8o_PageFunction*/
        
segment: path-to-page_lists_lists
title: Lists
↓Header [mobile.components.UIDynamicElement-1579283174178]: 
  beanData: '{"ionBean":"Header"}'
  comment: Page header
  tagName: ion-header
  ↓NavBar [mobile.components.UIDynamicElement-1579283174181]: 
    beanData: '{"ionBean":"NavBar"}'
    tagName: ion-navbar
    ↓BarTitle [mobile.components.UIDynamicElement-1579283174184]: 
      beanData: '{"ionBean":"BarTitle"}'
      tagName: ion-title
      ↓Text [mobile.components.UIText-1579283174187]: 
        textValue: 
          - xmlizable: 
            - ↑classname: com.twinsoft.convertigo.beans.mobile.components.MobileSmartSourceType
            - MobileSmartSourceType: plain:Lists
    ↓Button [mobile.components.UIDynamicElement-1579283174190]: 
      beanData: |
        '{
         "ionBean": "Button",
         "ButtonFormType": "plain:false",
         "MenuMode": "plain:menuToggle"
        }'
      comment: A button to toggle the menu
      tagName: button
      ↓Icon [mobile.components.UIDynamicElement-1579283174193]: 
        beanData: '{"ionBean":"Icon","IconName":"plain:menu"}'
        tagName: ion-icon
    ↓ButtonSet [mobile.components.UIDynamicElement-1585928732631]: 
      beanData: '{"ionBean":"ButtonSet","SetPosition":"plain:right"}'
      tagName: ion-buttons
      ↓Button [mobile.components.UIDynamicElement-1585928732634]: 
        beanData: |
          '{
           "ionBean": "Button",
           "ButtonFormType": "plain:false",
           "IonColor": "plain:primary",
           "IconOnly": "plain:icon-only"
          }'
        tagName: button
        ↓Icon [mobile.components.UIDynamicElement-1585928732637]: 
          beanData: '{"ionBean":"Icon","IconName":"plain:help-circle"}'
          tagName: ion-icon
        ↓Event [mobile.components.UIControlEvent-1585928732640]: 
          ↓wrapper [mobile.components.UICustomAction-1585928732643]: 
            ↓Popover [mobile.components.UIDynamicAction-1585928732646]: 
              beanData: |
                '{
                 "ionBean": "PopoverAction",
                 "page": "plain:MobileBuilderComponents.MobileApplication.Application.Page_Docs_documentation",
                 "data": "script:{\"components\":[{\"title\":\"List Container\",\"shortDesc\":\"ion-list\",\"longDesc\":[\"Defines a List Container component.\",\"Lists are used to display rows of information.\",\"You can insert items or buttons in lists to make list items clickable. You can also add to list items many other components such as icons, avatars or thumbnails.\"]},{\"title\":\"List Header Item\",\"shortDesc\":\"ion-list-header\",\"longDesc\":[\"Defines a List Header Item component.\",\"Each list can include a header at the top of the list.\"]},{\"title\":\"List Item\",\"shortDesc\":\"ion-item\",\"longDesc\":[\"Defines a List Item component.\",\"A List Item can be replaced by a Button with its button type property set to ion-item to make the item clickable.\",\"It can also contain Sliding Options to reveal buttons when swiped left or right.\"]},{\"title\":\"Group Item\",\"shortDesc\":\"ion-item-group\",\"longDesc\":[\"Defines a Group Item component.\",\"To make groups of items:\"],\"list\":[\"use Group Item instead of List Container\",\"use Divider Item components to divide the group into multiple sections.\"]},{\"title\":\"Divider Item\",\"shortDesc\":\"ion-item-divider\",\"longDesc\":[\"Defines a Divider Item component.\",\"To make groups of items:\"],\"list\":[\"use Group Item instead of List Container\",\"use Divider Item components to divide the group into multiple sections.\"]},{\"title\":\"Sliding Item\",\"shortDesc\":\"ion-item-sliding\",\"longDesc\":[\"Defines a Sliding Item component.\",\"Sliding items can be swiped to the left or right to reveal a hidden set of buttons.\",\"To use a <ion-item-sliding>, add a Sliding Item component inside of an List Container component.\",\"Next, add a Sliding Options component inside of the sliding item to contain the buttons.\"]},{\"title\":\"Avatar Item\",\"shortDesc\":\"ion-avatar\",\"longDesc\":[\"Defines an Avatar Item component.\",\"Item avatars showcase an image larger than an icon, but smaller than a thumbnail.\",\"To use an <ion-avatar>, add an Avatar Item component inside of a Generic Item component. The position property of the Avatar Item can be set to item-left or item-right value.\"]}]}"
                }'
          ↓InvokeSharedAction [mobile.components.UIDynamicInvoke-1588066311025]: 
            beanData: '{"ionBean":"InvokeAction"}'
            stack: MobileBuilderComponents.MobileApplication.Application.highlightObject
            ↓qname [mobile.components.UIControlVariable-1588066311028]: 
              varValue: 
                - xmlizable: 
                  - ↑classname: com.twinsoft.convertigo.beans.mobile.components.MobileSmartSourceType
                  - MobileSmartSourceType: script:'Page_Lists_Lists.Content.ListContainer'
            ↓clabel [mobile.components.UIControlVariable-1588066311031]: 
              varValue: 
                - xmlizable: 
                  - ↑classname: com.twinsoft.convertigo.beans.mobile.components.MobileSmartSourceType
                  - MobileSmartSourceType: script:'List Container'
↓Content [mobile.components.UIDynamicElement-1579283174196]: 
  beanData: '{"ionBean":"Content"}'
  comment: Page content
  tagName: ion-content
  ↓SearchBar [mobile.components.UIDynamicElement-1582299793892]: 
    beanData: '{"ionBean":"Searchbar","showCancelButton":"plain:true"}'
    tagName: ion-searchbar
    ↓Event [mobile.components.UIControlEvent-1582302138583]: 
      attrName: (ionInput)
      eventName: ionInput
      ↓filterItems [mobile.components.UICustomAction-1582302202609]: 
        actionValue: 
          - xmlizable: 
            - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
            - com.twinsoft.convertigo.beans.common.FormatedContent: 
              →: |
                '		page.c8o.log.debug(''[MB] ''+ props.actionFunction +'': ''+ props.actionName);
                		this.groupedPeople=this.global.tmpGroupedPeople;
                		let val = event.target.value;
                		
                		if (val && val.trim() !== '''') {
                		    this.groupedPeople=this.groupedPeople.map(item => {
                		        return {...item, contacts: item.contacts.filter((contact) => contact["lastname"].toLowerCase().includes(val.toLowerCase()))}
                		    });
                		}
                		
                		resolve();
                '
  ↓ListContainer [mobile.components.UIDynamicElement-1579530626198]: 
    beanData: '{"ionBean":"List"}'
    tagName: ion-list
    ↓Directive [mobile.components.UIControlDirective-1579513980954]: 
      directiveIndexName: index
      directiveItemName: group
      directiveSource: 
        - xmlizable: 
          - ↑classname: com.twinsoft.convertigo.beans.mobile.components.MobileSmartSourceType
          - MobileSmartSourceType: script:this.groupedPeople
      ↓GroupItem [mobile.components.UIDynamicElement-1579527441957]: 
        beanData: '{"ionBean":"Listgroup"}'
        tagName: ion-item-group
        ↓DividerItem [mobile.components.UIDynamicElement-1579527587441]: 
          beanData: '{"ionBean":"Listdivider","IonColor":"plain:light"}'
          tagName: ion-item-divider
          ↓Text [mobile.components.UIText-1579527600414]: 
            textValue: 
              - xmlizable: 
                - ↑classname: com.twinsoft.convertigo.beans.mobile.components.MobileSmartSourceType
                - MobileSmartSourceType: script:group.letter
        ↓Directive [mobile.components.UIControlDirective-1579527535287]: 
          directiveItemName: contact
          directiveSource: 
            - xmlizable: 
              - ↑classname: com.twinsoft.convertigo.beans.mobile.components.MobileSmartSourceType
              - MobileSmartSourceType: script:group.contacts
          ↓SlidingItem [mobile.components.UIDynamicElement-1579530376542]: 
            beanData: '{"ionBean":"Sliding"}'
            tagName: ion-item-sliding
            ↓ListItem [mobile.components.UIDynamicElement-1579527687596]: 
              beanData: '{"ionBean":"ListItem"}'
              tagName: ion-item
              ↓AvatarItem [mobile.components.UIDynamicElement-1579528110197]: 
                beanData: '{"ionBean":"Avatar"}'
                tagName: ion-avatar
                ↓Image [mobile.components.UIDynamicElement-1579528147411]: 
                  beanData: '{"ionBean":"Image","url":"script:''assets\/avatar\/icons8-user-''+contact.gender+''.png''"}'
                  selfClose: true
                  tagName: img
              ↓H2 [mobile.components.UIDynamicElement-1579528194709]: 
                beanData: '{"ionBean":"Heading2"}'
                tagName: h2
                ↓Text [mobile.components.UIText-1579527818288]: 
                  textValue: 
                    - xmlizable: 
                      - ↑classname: com.twinsoft.convertigo.beans.mobile.components.MobileSmartSourceType
                      - MobileSmartSourceType: script:contact.lastname
                ↓Text1 [mobile.components.UIText-1579527859834]: 
                  textValue: 
                    - xmlizable: 
                      - ↑classname: com.twinsoft.convertigo.beans.mobile.components.MobileSmartSourceType
                      - MobileSmartSourceType: script:contact.firstname
              ↓Paragraph [mobile.components.UIDynamicElement-1579528228633]: 
                beanData: '{"ionBean":"Paragraph"}'
                tagName: p
                ↓Text1 [mobile.components.UIText-1579528236868]: 
                  textValue: 
                    - xmlizable: 
                      - ↑classname: com.twinsoft.convertigo.beans.mobile.components.MobileSmartSourceType
                      - MobileSmartSourceType: script:contact.email
            ↓SlidingOption [mobile.components.UIDynamicElement-1579530410663]: 
              beanData: '{"ionBean":"SlidingOption","side":"plain:right"}'
              tagName: ion-item-options
              ↓Button [mobile.components.UIDynamicElement-1579530421168]: 
                beanData: '{"ionBean":"Button","IonColor":"plain:secondary"}'
                tagName: button
                ↓Icon [mobile.components.UIDynamicElement-1579530429591]: 
                  beanData: '{"ionBean":"Icon","IconName":"plain:call"}'
                  tagName: ion-icon
                ↓Text [mobile.components.UIText-1579530665524]: 
                  textValue: 
                    - xmlizable: 
                      - ↑classname: com.twinsoft.convertigo.beans.mobile.components.MobileSmartSourceType
                      - MobileSmartSourceType: plain:call
              ↓Button1 [mobile.components.UIDynamicElement-1579530678395]: 
                beanData: '{"ionBean":"Button","IonColor":"plain:primary"}'
                tagName: button
                ↓Icon [mobile.components.UIDynamicElement-1579530678398]: 
                  beanData: '{"ionBean":"Icon","IconName":"plain:text"}'
                  tagName: ion-icon
                ↓Text [mobile.components.UIText-1579530678401]: 
                  textValue: 
                    - xmlizable: 
                      - ↑classname: com.twinsoft.convertigo.beans.mobile.components.MobileSmartSourceType
                      - MobileSmartSourceType: plain:sms
            ↓SlidingOption1 [mobile.components.UIDynamicElement-1579530725755]: 
              beanData: '{"ionBean":"SlidingOption","side":"plain:left"}'
              tagName: ion-item-options
              ↓Button [mobile.components.UIDynamicElement-1579530725758]: 
                beanData: '{"ionBean":"Button","IonColor":"plain:danger"}'
                tagName: button
                ↓Icon [mobile.components.UIDynamicElement-1579530725761]: 
                  beanData: '{"ionBean":"Icon","IconName":"plain:trash"}'
                  tagName: ion-icon
                ↓Text [mobile.components.UIText-1579530725764]: 
                  textValue: 
                    - xmlizable: 
                      - ↑classname: com.twinsoft.convertigo.beans.mobile.components.MobileSmartSourceType
                      - MobileSmartSourceType: plain:delete
↓PageEvent [mobile.components.UIPageEvent-1579513796412]: 
  ↓getPeopleLists [mobile.components.UIDynamicInvoke-1579513807408]: 
    beanData: '{"ionBean":"InvokeAction"}'
    stack: MobileBuilderComponents.MobileApplication.Application.getPeople
    ↓peopleNbr [mobile.components.UIControlVariable-1579513818508]: 
      varValue: 
        - xmlizable: 
          - ↑classname: com.twinsoft.convertigo.beans.mobile.components.MobileSmartSourceType
          - MobileSmartSourceType: script:'25'
    ↓groupPeople [mobile.components.UICustomAction-1579514488923]: 
      actionValue: 
        - xmlizable: 
          - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
          - com.twinsoft.convertigo.beans.common.FormatedContent: 
            →: |
              '		page.c8o.log.debug(''[MB] ''+ props.actionFunction +'': ''+ props.actionName);
              		//page.c8o.log.debug(''ppl: ''+ vars.ppl.People.sort());
              		let ppl = vars.ppl.People;
              		let curLetter = false;
              		let curPeople = [];
              		
              		ppl.forEach((value, index) => {
              		    let lname = value.lastname;
              		    if(lname.charAt(0) != curLetter){
              		        curLetter = lname.charAt(0);
              		        let newGroup = {
              		                letter: curLetter,
              		                contacts: []
              		        }
              		        curPeople = newGroup.contacts;
              		        this.groupedPeople.push(newGroup);
              		        this.global.tmpGroupedPeople = this.groupedPeople.slice(0);
              		    }
              		    curPeople.push(value);
              		});
              		
              		resolve();
              '
      ↓ppl [mobile.components.UIControlVariable-1579514520443]: 
        varValue: 
          - xmlizable: 
            - ↑classname: com.twinsoft.convertigo.beans.mobile.components.MobileSmartSourceType
            - MobileSmartSourceType: script:stack['CallSequence_generatePeople'].out
    ↓marker [mobile.components.UIControlVariable-1582716387018]: 
      varValue: 
        - xmlizable: 
          - ↑classname: com.twinsoft.convertigo.beans.mobile.components.MobileSmartSourceType
          - MobileSmartSourceType: script:'LIST'
↓UseSharedComponent [mobile.components.UIUseShared-1582819317785]: 
  sharedcomponent: MobileBuilderComponents.MobileApplication.Application.Footer