preloadPriority: high
scriptContent: 
  - xmlizable: 
    - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
    - com.twinsoft.convertigo.beans.common.FormatedContent: 
      →: |
        /*Begin_c8o_PageImport*/
        /*End_c8o_PageImport*/
        /*Begin_c8o_PageDeclaration*/
        	/*End_c8o_PageDeclaration*/
        /*Begin_c8o_PageConstructor*/
        		/*End_c8o_PageConstructor*/
        /*Begin_c8o_PageFunction*/
        	/*End_c8o_PageFunction*/
        
segment: path-to-page_actions_popover
title: Popover
↓Header [mobile.components.UIDynamicElement-1585215458966]: 
  beanData: '{"ionBean":"Header"}'
  comment: Page header
  tagName: ion-header
  ↓NavBar [mobile.components.UIDynamicElement-1585215458969]: 
    beanData: '{"ionBean":"NavBar"}'
    tagName: ion-navbar
    ↓BarTitle [mobile.components.UIDynamicElement-1585215458972]: 
      beanData: '{"ionBean":"BarTitle"}'
      tagName: ion-title
      ↓Text [mobile.components.UIText-1585215458975]: 
        textValue: 
          - xmlizable: 
            - ↑classname: com.twinsoft.convertigo.beans.mobile.components.MobileSmartSourceType
            - MobileSmartSourceType: plain:Pop Over
    ↓Button [mobile.components.UIDynamicElement-1585215458978]: 
      beanData: |
        '{
         "ionBean": "Button",
         "ButtonFormType": "plain:false",
         "MenuMode": "plain:menuToggle"
        }'
      comment: A button to toggle the menu
      tagName: button
      ↓Icon [mobile.components.UIDynamicElement-1585215458981]: 
        beanData: '{"ionBean":"Icon","IconName":"plain:menu"}'
        tagName: ion-icon
    ↓ButtonSet [mobile.components.UIDynamicElement-1585215889928]: 
      beanData: '{"ionBean":"ButtonSet","SetPosition":"plain:right"}'
      tagName: ion-buttons
      ↓Button [mobile.components.UIDynamicElement-1585215889931]: 
        beanData: |
          '{
           "ionBean": "Button",
           "ButtonFormType": "plain:false",
           "IonColor": "plain:primary",
           "IconOnly": "plain:icon-only"
          }'
        tagName: button
        ↓Icon [mobile.components.UIDynamicElement-1585215889934]: 
          beanData: '{"ionBean":"Icon","IconName":"plain:more"}'
          tagName: ion-icon
        ↓Event [mobile.components.UIControlEvent-1585230591240]: 
          ↓wrapper [mobile.components.UICustomAction-1585244154334]: 
            ↓Popover [mobile.components.UIDynamicAction-1585230621292]: 
              beanData: |
                '{
                 "ionBean": "PopoverAction",
                 "page": "plain:MobileBuilderComponents.MobileApplication.Application.Page_Actions_Popover_template",
                 "data": "script:{''contentEl'': this.popoverContent._elementRef.nativeElement, ''textEl'': this.popoverText.nativeElement, ''key'': ''value''}",
                 "enableBackdropDismiss": "plain:false"
                }'
          ↓InvokeSharedAction [mobile.components.UIDynamicInvoke-1588084970206]: 
            beanData: '{"ionBean":"InvokeAction"}'
            stack: MobileBuilderComponents.MobileApplication.Application.highlightObject
            ↓clabel [mobile.components.UIControlVariable-1588084970209]: 
              varValue: 
                - xmlizable: 
                  - ↑classname: com.twinsoft.convertigo.beans.mobile.components.MobileSmartSourceType
                  - MobileSmartSourceType: script:'Popover Page'
↓Content [mobile.components.UIDynamicElement-1585215458984]: 
  beanData: '{"ionBean":"Content"}'
  comment: Page content
  identifier: popoverContent
  tagName: ion-content
  ↓Div [mobile.components.UIDynamicElement-1585232734934]: 
    beanData: '{"ionBean":"DivTag"}'
    identifier: popoverText
    tagName: div
    ↓Fragment [mobile.components.UICustom-1585232742333]: 
      htmlTemplate: |
        <div>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Mauris vel ipsum in purus mollis dictum eget vitae purus. Nulla ultrices est odio, a maximus velit pretium ac. Donec vel elementum mi. Proin elementum pulvinar neque, in lacinia nibh tempus auctor. Nam sapien velit, commodo ac nibh a, maximus ullamcorper nunc. Integer luctus tortor dignissim, dictum neque at, scelerisque purus. Vivamus nec erat vel magna posuere euismod. Sed ac augue eu tellus tincidunt fermentum eget sit amet nunc. Donec sit amet mi libero. Cras nunc arcu, ultrices nec sapien eu, convallis posuere libero. Pellentesque vulputate lacus eros, at lobortis lorem egestas et. Vestibulum tempus quam in efficitur lobortis. Maecenas consectetur consequat sem pharetra aliquet. Class aptent taciti sociosqu ad litora torquent per conubia nostra, per inceptos himenaeos.</div>
        
        <div>Mauris ac ligula elit. Nulla pulvinar eget leo ut aliquet. Praesent sit amet luctus quam. Nam fringilla iaculis mi, ut maximus mauris molestie feugiat. Curabitur nec scelerisque elit. Nunc eu odio facilisis, tempor enim eget, venenatis sem. Sed vitae lorem vehicula, auctor orci ultrices, finibus mauris. Donec vitae pulvinar diam. Nulla luctus congue quam, sed lacinia arcu dictum a.</div>
        
        <div>Morbi laoreet magna elit, id dapibus massa varius consequat. Praesent rhoncus nunc quam, eu mollis velit commodo ut. Etiam euismod elit mi, non auctor velit blandit ut. Aenean vitae pulvinar mi, ac pretium tellus. Morbi eu auctor sem, sollicitudin cursus felis. Praesent vestibulum velit sed eros iaculis ornare. Praesent diam diam, pellentesque eget scelerisque sed, bibendum ut risus. Sed sed fermentum sem. Integer vel justo felis. Proin eget quam est. In sit amet ipsum sagittis, convallis ipsum fringilla, interdum ante. Etiam vel tincidunt mauris. Nunc feugiat eros nunc, et vestibulum metus mollis et. Nullam eu viverra velit, id ultrices nisl. Donec non enim elementum, laoreet sapien id, feugiat tellus.</div>
    ↓Attr [mobile.components.UIAttribute-1585232815006]: 
      attrName: 
      attrValue: 
        - xmlizable: 
          - ↑classname: com.twinsoft.convertigo.beans.mobile.components.MobileSmartSourceType
          - MobileSmartSourceType: plain:margin-top
    ↓Attr1 [mobile.components.UIAttribute-1585232836099]: 
      attrName: 
      attrValue: 
        - xmlizable: 
          - ↑classname: com.twinsoft.convertigo.beans.mobile.components.MobileSmartSourceType
          - MobileSmartSourceType: plain:margin-bottom
↓UseSharedComponent [mobile.components.UIUseShared-1585215738870]: 
  sharedcomponent: MobileBuilderComponents.MobileApplication.Application.Footer
↓PageEvent [mobile.components.UIPageEvent-1585324018964]: 
  ↓initPopoverOptions [mobile.components.UICustomAction-1585324027767]: 
    actionValue: 
      - xmlizable: 
        - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
        - com.twinsoft.convertigo.beans.common.FormatedContent: 
          →: |
            '		page.c8o.log.debug(''[MB] ''+ props.actionFunction +'': ''+ props.actionName);
            		
            		page.global.popover = {};
            		
            		page.global.popover.background = ''white'';
            		page.global.popover.fontSize = ''initial'';
            		
            		page.global.popover.colors = {
                        ''white'': {
                            ''bg'': ''rgb(255, 255, 255)'',
                            ''fg'': ''rgb(0, 0, 0)''
                        },
                        ''tan'': {
                            ''bg'': ''rgb(249, 241, 228)'',
                            ''fg'': ''rgb(0, 0, 0)''
                        },
                        ''grey'': {
                            ''bg'': ''rgb(76, 75, 80)'',
                            ''fg'': ''rgb(255, 255, 255)''
                        },
                        ''black'': {
                            ''bg'': ''rgb(0, 0, 0)'',
                            ''fg'': ''rgb(255, 255, 255)''
                        },
                    };
            		
                    page.global.popover.changeFontSize = (direction: string) => {
                        let textEle = this.popoverText.nativeElement;
                        textEle.style.fontSize = page.global.popover.fontSize = direction;
                        
                        page.c8o.log.debug(''>>>> fontSize: ''+ page.global.popover.fontSize);
                    }
                    
                    page.global.popover.changeBackground = (color: any) => {
                        let textEle = this.popoverText.nativeElement;
                        let contentEle = this.popoverContent._elementRef.nativeElement;
                        page.global.popover.background = color;
                        contentEle.style.backgroundColor = page.global.popover.colors[color].bg;
                        textEle.style.color = page.global.popover.colors[color].fg;
                    }
                    
                    page.global.popover.changeFontFamily = () => {
                        let textEle = this.popoverText.nativeElement;
                        if (page.global.popover.fontFamily) textEle.style.fontFamily = page.global.popover.fontFamily;
                    }
            		 
            		resolve();
            '