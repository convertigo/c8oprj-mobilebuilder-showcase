preloadPriority: high
scriptContent: 
  - xmlizable: 
    - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
    - com.twinsoft.convertigo.beans.common.FormatedContent: 
      →: |
        /*Begin_c8o_PageImport*/
        /*End_c8o_PageImport*/
        /*Begin_c8o_PageDeclaration*/
        	/*End_c8o_PageDeclaration*/
        /*Begin_c8o_PageConstructor*/
        		/*End_c8o_PageConstructor*/
        /*Begin_c8o_PageFunction*/
        	/*End_c8o_PageFunction*/
        
segment: path-to-page_customs_animation
title: Animation
↓Header [mobile.components.UIDynamicElement-1579103295967]: 
  beanData: '{"ionBean":"Header"}'
  comment: Page header
  tagName: ion-header
  ↓NavBar [mobile.components.UIDynamicElement-1579103295970]: 
    beanData: '{"ionBean":"NavBar"}'
    tagName: ion-navbar
    ↓BarTitle [mobile.components.UIDynamicElement-1579103295973]: 
      beanData: '{"ionBean":"BarTitle"}'
      tagName: ion-title
      ↓Text [mobile.components.UIText-1579103295976]: 
        textValue: 
          - xmlizable: 
            - ↑classname: com.twinsoft.convertigo.beans.mobile.components.MobileSmartSourceType
            - MobileSmartSourceType: plain:Animation
    ↓Button [mobile.components.UIDynamicElement-1579103295979]: 
      beanData: |
        '{
         "ionBean": "Button",
         "ButtonFormType": "plain:false",
         "MenuMode": "plain:menuToggle"
        }'
      comment: A button to toggle the menu
      tagName: button
      ↓Icon [mobile.components.UIDynamicElement-1579103295982]: 
        beanData: '{"ionBean":"Icon","IconName":"plain:menu"}'
        tagName: ion-icon
    ↓ButtonSet [mobile.components.UIDynamicElement-1585835374851]: 
      beanData: '{"ionBean":"ButtonSet","SetPosition":"plain:right"}'
      tagName: ion-buttons
      ↓Button [mobile.components.UIDynamicElement-1585835374854]: 
        beanData: |
          '{
           "ionBean": "Button",
           "ButtonFormType": "plain:false",
           "IonColor": "plain:primary",
           "IconOnly": "plain:icon-only"
          }'
        tagName: button
        ↓Icon [mobile.components.UIDynamicElement-1585835374857]: 
          beanData: '{"ionBean":"Icon","IconName":"plain:help-circle"}'
          tagName: ion-icon
        ↓Event [mobile.components.UIControlEvent-1585835374860]: 
          ↓wrapper [mobile.components.UICustomAction-1585835374863]: 
            ↓Popover [mobile.components.UIDynamicAction-1585835374866]: 
              beanData: |
                '{
                 "ionBean": "PopoverAction",
                 "page": "plain:MobileBuilderComponents.MobileApplication.Application.Page_Docs_documentation",
                 "data": "script:{\"components\":[{\"title\":\"Animation\",\"shortDesc\":\"Defines an Animation class for a component.\",\"longDesc\":[\"Adding an animation to a component will have this component animated automatically as soon as the component appears on the page. You can choose the animation name, and some other properties to control the animation.\",\"If you want the animation to be triggered by an event such as (tap) (click) or PageEvents, use instead the Animate action.\"]},{\"title\":\"Animate\",\"shortDesc\":\"Defines an Animate action component.\",\"longDesc\":[\"You can use the Animate action to animate a component when an event occurs. To do this, just place the action under the event. It can be a (click) or (tap) event or even a Page didEnter event. The animation will take place when the event is triggered. \"],\"list\":[\"Animatable View the elements with an Identifier property set. Select here one element Identifier to animate.\",\"Apply mode Animate only the selected element (single) or all elements (all) with the same Identifier value. You can also chain animations to animate in parrallel (Sibling Animate actions) or serial (Child Animate actions).\"]}]}"
                }'
          ↓InvokeSharedAction [mobile.components.UIDynamicInvoke-1587997983046]: 
            beanData: '{"ionBean":"InvokeAction"}'
            stack: MobileBuilderComponents.MobileApplication.Application.highlightObject
            ↓clabel [mobile.components.UIControlVariable-1587997983049]: 
              varValue: 
                - xmlizable: 
                  - ↑classname: com.twinsoft.convertigo.beans.mobile.components.MobileSmartSourceType
                  - MobileSmartSourceType: script:'Animation'
            ↓qname [mobile.components.UIControlVariable-1587998106343]: 
              varValue: 
                - xmlizable: 
                  - ↑classname: com.twinsoft.convertigo.beans.mobile.components.MobileSmartSourceType
                  - MobileSmartSourceType: script:'Page_Customs_Animation.Content.Grid.GridRow1.GridCol.TextFormat.H1.Animation'
↓Content [mobile.components.UIDynamicElement-1579103295994]: 
  beanData: '{"ionBean":"Content","IonPadding":"plain:false"}'
  comment: Page content
  tagName: ion-content
  ↓Grid [mobile.components.UIDynamicElement-1579109611140]: 
    beanData: '{"ionBean":"Grid","Height":"plain:height:100%"}'
    tagName: ion-grid
    ↓GridRow1 [mobile.components.UIDynamicElement-1579109620477]: 
      beanData: '{"ionBean":"GridRow","Height":"plain:height: 100%"}'
      tagName: ion-row
      ↓GridCol [mobile.components.UIDynamicElement-1579109640638]: 
        beanData: '{"ionBean":"GridCol","AlignItemsCenter":"plain:align-self-center"}'
        tagName: ion-col
        ↓TextFormat [mobile.components.UIDynamicElement-1579109829178]: 
          beanData: '{"ionBean":"TextFormat","TextCenter":"plain:text-center"}'
          tagName: div
          ↓H1 [mobile.components.UIDynamicElement-1579103622072]: 
            beanData: '{"ionBean":"Heading1"}'
            tagName: h1
            ↓Text [mobile.components.UIText-1579103416294]: 
              textValue: 
                - xmlizable: 
                  - ↑classname: com.twinsoft.convertigo.beans.mobile.components.MobileSmartSourceType
                  - MobileSmartSourceType: plain:ANIMATED TEXT!
            ↓Animation [mobile.components.UIAnimation-1579103447388]: 
              animationName: rubberBand
    ↓GridRow2 [mobile.components.UIDynamicElement-1579166448862]: 
      beanData: '{"ionBean":"GridRow","Height":"plain:height: 100%"}'
      tagName: ion-row
      ↓GridCol [mobile.components.UIDynamicElement-1579166448867]: 
        beanData: '{"ionBean":"GridCol","AlignItemsCenter":"plain:align-self-center"}'
        tagName: ion-col
        ↓TextFormat [mobile.components.UIDynamicElement-1579166448870]: 
          beanData: '{"ionBean":"TextFormat","TextCenter":"plain:text-center"}'
          tagName: div
          ↓H1 [mobile.components.UIDynamicElement-1579166448873]: 
            beanData: '{"ionBean":"Heading1"}'
            tagName: h1
            ↓Text [mobile.components.UIText-1579166448876]: 
              textValue: 
                - xmlizable: 
                  - ↑classname: com.twinsoft.convertigo.beans.mobile.components.MobileSmartSourceType
                  - MobileSmartSourceType: plain:ANIMATED TEXT!
            ↓Animation [mobile.components.UIAnimation-1579166448879]: 
              animationName: rubberBand
            ↓Animation1 [mobile.components.UIAnimation-1579166448882]: 
              animationName: delay-2s
            ↓Animation2 [mobile.components.UIAnimation-1579166448885]: 
              animationName: slow
    ↓GridRow11 [mobile.components.UIDynamicElement-1584977279678]: 
      beanData: '{"ionBean":"GridRow","Height":"plain:height: 100%"}'
      tagName: ion-row
      ↓GridCol [mobile.components.UIDynamicElement-1584977279681]: 
        beanData: '{"ionBean":"GridCol","AlignItemsCenter":"plain:align-self-center"}'
        tagName: ion-col
        ↓TextFormat [mobile.components.UIDynamicElement-1584977279684]: 
          beanData: '{"ionBean":"TextFormat","TextCenter":"plain:text-center"}'
          tagName: div
          ↓H1 [mobile.components.UIDynamicElement-1584977279687]: 
            beanData: '{"ionBean":"Heading1"}'
            identifier: AnimateMe
            tagName: h1
            ↓Text [mobile.components.UIText-1584977279690]: 
              textValue: 
                - xmlizable: 
                  - ↑classname: com.twinsoft.convertigo.beans.mobile.components.MobileSmartSourceType
                  - MobileSmartSourceType: plain:CLICK ANIMATE BUTTON!
↓Footer [mobile.components.UIDynamicElement-1579103295997]: 
  beanData: '{"ionBean":"Footer"}'
  comment: Page footer
  tagName: ion-footer
  ↓ToolBar [mobile.components.UIDynamicElement-1579103296000]: 
    beanData: '{"ionBean":"ToolBar"}'
    tagName: ion-toolbar
    ↓ButtonSet [mobile.components.UIDynamicElement-1579103296003]: 
      beanData: '{"ionBean":"ButtonSet","SetPosition":"plain:left"}'
      tagName: ion-buttons
      ↓Button [mobile.components.UIDynamicElement-1579103296006]: 
        beanData: '{"ionBean":"Button","ButtonFormType":"plain:false"}'
        tagName: button
        ↓Text [mobile.components.UIText-1579103296009]: 
          textValue: 
            - xmlizable: 
              - ↑classname: com.twinsoft.convertigo.beans.mobile.components.MobileSmartSourceType
              - MobileSmartSourceType: plain:Animate
        ↓Event [mobile.components.UIControlEvent-1579112097814]: 
          ↓Animate [mobile.components.UIDynamicAnimate-1584977367409]: 
            beanData: |
              '{
               "ionBean": "AnimateAction",
               "type": "plain:flipInX",
               "fillMode": "plain:forwards",
               "duration": "plain:1000"
              }'
            identifiable: MobileBuilderComponents.MobileApplication.Application.Page_Customs_Animation.Content.Grid.GridRow11.GridCol.TextFormat.H1
          ↓InvokeSharedAction [mobile.components.UIDynamicInvoke-1587998185882]: 
            beanData: '{"ionBean":"InvokeAction"}'
            stack: MobileBuilderComponents.MobileApplication.Application.highlightObject
            ↓clabel [mobile.components.UIControlVariable-1587998185885]: 
              varValue: 
                - xmlizable: 
                  - ↑classname: com.twinsoft.convertigo.beans.mobile.components.MobileSmartSourceType
                  - MobileSmartSourceType: script:'Animate'
            ↓qname [mobile.components.UIControlVariable-1587998185888]: 
              varValue: 
                - xmlizable: 
                  - ↑classname: com.twinsoft.convertigo.beans.mobile.components.MobileSmartSourceType
                  - MobileSmartSourceType: script:'Page_Customs_Animation.Footer.ToolBar.ButtonSet.Button.Event.Animate'
    ↓ButtonSet1 [mobile.components.UIDynamicElement-1584977313232]: 
      beanData: '{"ionBean":"ButtonSet","SetPosition":"plain:right"}'
      tagName: ion-buttons
      ↓Button [mobile.components.UIDynamicElement-1584977313235]: 
        beanData: '{"ionBean":"Button","ButtonFormType":"plain:false"}'
        tagName: button
        ↓Text [mobile.components.UIText-1584977313238]: 
          textValue: 
            - xmlizable: 
              - ↑classname: com.twinsoft.convertigo.beans.mobile.components.MobileSmartSourceType
              - MobileSmartSourceType: plain:Reload
        ↓Event [mobile.components.UIControlEvent-1584977313241]: 
          ↓RootPage [mobile.components.UIDynamicAction-1584977313244]: 
            beanData: |
              '{
               "ionBean": "RootPageAction",
               "page": "plain:MobileBuilderComponents.MobileApplication.Application.Page_Customs_Animation",
               "animate": "plain:false"
              }'
↓Style [mobile.components.UIStyle-1579167116109]: 
  styleContent: 
    - xmlizable: 
      - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
      - com.twinsoft.convertigo.beans.common.FormatedContent: 
        →: |
          'h1 {
          	font-size: 5vw;
          }
          
          div.doc {
          	font-size: 2.2vw;
          	font-weight: 500;
          }'