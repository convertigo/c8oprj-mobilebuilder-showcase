preloadPriority: high
scriptContent: 
  - xmlizable: 
    - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
    - com.twinsoft.convertigo.beans.common.FormatedContent: 
      →: |
        /*Begin_c8o_PageImport*/
        /*End_c8o_PageImport*/
        /*Begin_c8o_PageDeclaration*/
        	/*End_c8o_PageDeclaration*/
        /*Begin_c8o_PageConstructor*/
        		/*End_c8o_PageConstructor*/
        /*Begin_c8o_PageFunction*/
        	/*End_c8o_PageFunction*/
        
segment: path-to-page_actions_iterateaction
title: Iterate/Loop
↓Header [mobile.components.UIDynamicElement-1585676030394]: 
  beanData: '{"ionBean":"Header"}'
  comment: Page header
  tagName: ion-header
  ↓NavBar [mobile.components.UIDynamicElement-1585676030397]: 
    beanData: '{"ionBean":"NavBar"}'
    tagName: ion-navbar
    ↓BarTitle [mobile.components.UIDynamicElement-1585676030400]: 
      beanData: '{"ionBean":"BarTitle"}'
      tagName: ion-title
      ↓Text [mobile.components.UIText-1585676030403]: 
        textValue: 
          - xmlizable: 
            - ↑classname: com.twinsoft.convertigo.beans.mobile.components.MobileSmartSourceType
            - MobileSmartSourceType: plain:IterateAction
    ↓Button [mobile.components.UIDynamicElement-1585676030406]: 
      beanData: |
        '{
         "ionBean": "Button",
         "ButtonFormType": "plain:false",
         "MenuMode": "plain:menuToggle"
        }'
      comment: A button to toggle the menu
      tagName: button
      ↓Icon [mobile.components.UIDynamicElement-1585676030409]: 
        beanData: '{"ionBean":"Icon","IconName":"plain:menu"}'
        tagName: ion-icon
    ↓ButtonSet [mobile.components.UIDynamicElement-1585817163373]: 
      beanData: '{"ionBean":"ButtonSet","SetPosition":"plain:right"}'
      tagName: ion-buttons
      ↓Button [mobile.components.UIDynamicElement-1585817163376]: 
        beanData: |
          '{
           "ionBean": "Button",
           "ButtonFormType": "plain:false",
           "IonColor": "plain:primary",
           "IconOnly": "plain:icon-only"
          }'
        tagName: button
        ↓Icon [mobile.components.UIDynamicElement-1585817163379]: 
          beanData: '{"ionBean":"Icon","IconName":"plain:help-circle"}'
          tagName: ion-icon
        ↓Event [mobile.components.UIControlEvent-1585817163382]: 
          ↓wrapper [mobile.components.UICustomAction-1585817163385]: 
            ↓Popover [mobile.components.UIDynamicAction-1585817163388]: 
              beanData: |
                '{
                 "ionBean": "PopoverAction",
                 "page": "plain:MobileBuilderComponents.MobileApplication.Application.Page_Docs_documentation",
                 "data": "script:{\"components\":[{\"title\":\"IterateAction\",\"shortDesc\":\"Defines an IterateAction component.\",\"longDesc\":[\"This component helps iterating any objects array.\",\"To work properly the IterateAction needs a Loop Handler in which you may add any kind of action to be executed at each loop.\",\"The Loop Handler exposes the loop''scurrentitemandindexyoucanuseinactions.\"]},{\"title\":\"Loop Handler\",\"shortDesc\":\"Defines a Loop Handler\",\"longDesc\":[\"A Loop Handler must be added inside an IterateAction.\",\"It helps defining actions to be executed for each loop.\",\"Each action can access the current loop index and item through the index and item parameters in TS mode. You can change the parameter names for more appropriate ones or to differentiate them in nested loops.\"]}]}"
                }'
↓Content [mobile.components.UIDynamicElement-1585676030412]: 
  beanData: '{"ionBean":"Content"}'
  comment: Page content
  tagName: ion-content
  ↓Grid [mobile.components.UIDynamicElement-1585817643843]: 
    beanData: '{"ionBean":"Grid"}'
    tagName: ion-grid
    ↓GridRow [mobile.components.UIDynamicElement-1585817643846]: 
      beanData: '{"ionBean":"GridRow","Height":"plain:height: 100%"}'
      tagName: ion-row
      ↓GridCol [mobile.components.UIDynamicElement-1585676157560]: 
        beanData: '{"ionBean":"GridCol"}'
        tagName: ion-col
        ↓Attr [mobile.components.UIAttribute-1585676157563]: 
          attrName: 
          attrValue: 
            - xmlizable: 
              - ↑classname: com.twinsoft.convertigo.beans.mobile.components.MobileSmartSourceType
              - MobileSmartSourceType: plain:text-justify
        ↓Fragment [mobile.components.UICustom-1585676157566]: 
          htmlTemplate: |
            <div>
            	<p>Come and visit <b>Page_Actions_LoadingShowClose</b> page to see some <b>IterateAction</b> use case:</p>
            </div>
    ↓GridRow1 [mobile.components.UIDynamicElement-1587473058433]: 
      beanData: '{"ionBean":"GridRow","Height":"plain:height: 100%"}'
      tagName: ion-row
      ↓GridCol [mobile.components.UIDynamicElement-1587473058436]: 
        beanData: '{"ionBean":"GridCol"}'
        tagName: ion-col
        ↓Attr [mobile.components.UIAttribute-1587473058439]: 
          attrName: 
          attrValue: 
            - xmlizable: 
              - ↑classname: com.twinsoft.convertigo.beans.mobile.components.MobileSmartSourceType
              - MobileSmartSourceType: plain:text-right
        ↓Button [mobile.components.UIDynamicElement-1585676515964]: 
          beanData: '{"ionBean":"Button"}'
          tagName: button
          ↓Text [mobile.components.UIText-1585676540382]: 
            textValue: 
              - xmlizable: 
                - ↑classname: com.twinsoft.convertigo.beans.mobile.components.MobileSmartSourceType
                - MobileSmartSourceType: plain:go
          ↓Event [mobile.components.UIControlEvent-1585676662132]: 
            ↓PushPage [mobile.components.UIDynamicAction-1585676670659]: 
              beanData: '{"ionBean":"PushPageAction","page":"plain:MobileBuilderComponents.MobileApplication.Application.Page_Actions_LoadingShowClose"}'
  ↓Grid1 [mobile.components.UIDynamicElement-1587464007504]: 
    beanData: '{"ionBean":"Grid"}'
    tagName: ion-grid
    ↓GridRow [mobile.components.UIDynamicElement-1587464007507]: 
      beanData: |
        '{
         "ionBean": "GridRow",
         "Height": "plain:height: 100%",
         "AlignItemsCenter": "plain:align-items-center"
        }'
      tagName: ion-row
      ↓GridCol [mobile.components.UIDynamicElement-1587464007510]: 
        beanData: '{"ionBean":"GridCol","Columns":"plain:9"}'
        tagName: ion-col
        ↓Fragment [mobile.components.UICustom-1587464007516]: 
          htmlTemplate: |
            <div>
            	<p>Iterate through an array of Strings:</p>
            </div>
      ↓GridCol1 [mobile.components.UIDynamicElement-1587472214599]: 
        beanData: '{"ionBean":"GridCol"}'
        tagName: ion-col
        ↓Text [mobile.components.UIText-1587472214608]: 
          textValue: 
            - xmlizable: 
              - ↑classname: com.twinsoft.convertigo.beans.mobile.components.MobileSmartSourceType
              - MobileSmartSourceType: script:this.global.ascii
    ↓GridRow1 [mobile.components.UIDynamicElement-1587473113415]: 
      beanData: '{"ionBean":"GridRow","Height":"plain:height: 100%"}'
      tagName: ion-row
      ↓GridCol [mobile.components.UIDynamicElement-1587473113418]: 
        beanData: '{"ionBean":"GridCol"}'
        tagName: ion-col
        ↓Attr [mobile.components.UIAttribute-1587473113421]: 
          attrName: 
          attrValue: 
            - xmlizable: 
              - ↑classname: com.twinsoft.convertigo.beans.mobile.components.MobileSmartSourceType
              - MobileSmartSourceType: plain:text-right
        ↓Button1 [mobile.components.UIDynamicElement-1587464007519]: 
          beanData: '{"ionBean":"Button"}'
          tagName: button
          ↓Text [mobile.components.UIText-1587464007522]: 
            textValue: 
              - xmlizable: 
                - ↑classname: com.twinsoft.convertigo.beans.mobile.components.MobileSmartSourceType
                - MobileSmartSourceType: plain:go
          ↓Event [mobile.components.UIControlEvent-1587464007525]: 
            ↓Log [mobile.components.UIDynamicAction-1587465976811]: 
              beanData: '{"ionBean":"LogAction","message":"plain:ASCII ANIMATION"}'
              ↓IterateAction1 [mobile.components.UIDynamicIterate-1587465709854]: 
                beanData: '{"ionBean":"IterateAction","items":"script:new Array(10)"}'
                ↓Loop_Handler [mobile.components.UIActionLoopEvent-1587465718192]: 
                  ↓IterateAction [mobile.components.UIDynamicIterate-1587464029689]: 
                    beanData: '{"ionBean":"IterateAction","items":"script:[''.(^-^)°'', ''-(^-^)-'', ''°(^-^).'', ''-(^o^)-'', ''.(^-^)°'', ''-(^-^)-'', ''°(^-^).'', ''-(^-^)-'']"}'
                    ↓Loop_Handler [mobile.components.UIActionLoopEvent-1587464109021]: 
                      ↓SetGlobal [mobile.components.UIDynamicAction-1587465189575]: 
                        beanData: |
                          '{
                           "ionBean": "SetGlobalAction",
                           "Property": "plain:ascii",
                           "Value": "script:item"
                          }'
                      ↓PauseAction [mobile.components.UIDynamicAction-1587465333523]: 
                        beanData: '{"ionBean":"PauseAction","duration":"plain:125"}'
  ↓Grid2 [mobile.components.UIDynamicElement-1587471998460]: 
    beanData: '{"ionBean":"Grid"}'
    tagName: ion-grid
    ↓GridRow [mobile.components.UIDynamicElement-1587471998463]: 
      beanData: |
        '{
         "ionBean": "GridRow",
         "Height": "plain:height: 100%",
         "AlignItemsCenter": "plain:align-items-center"
        }'
      tagName: ion-row
      ↓GridCol [mobile.components.UIDynamicElement-1587471998466]: 
        beanData: '{"ionBean":"GridCol","Columns":"plain:9"}'
        tagName: ion-col
        ↓Attr [mobile.components.UIAttribute-1587471998469]: 
          attrName: 
          attrValue: 
            - xmlizable: 
              - ↑classname: com.twinsoft.convertigo.beans.mobile.components.MobileSmartSourceType
              - MobileSmartSourceType: plain:text-justify
        ↓Fragment [mobile.components.UICustom-1587471998472]: 
          htmlTemplate: |
            <div>
            	<p>Defines an empty array of size 50 and counting indexes:</p>
            </div>
      ↓GridCol1 [mobile.components.UIDynamicElement-1587472389517]: 
        beanData: '{"ionBean":"GridCol"}'
        tagName: ion-col
        ↓Text [mobile.components.UIText-1587472389520]: 
          textValue: 
            - xmlizable: 
              - ↑classname: com.twinsoft.convertigo.beans.mobile.components.MobileSmartSourceType
              - MobileSmartSourceType: script:this.global.countItem
    ↓GridRow1 [mobile.components.UIDynamicElement-1587473139326]: 
      beanData: '{"ionBean":"GridRow","Height":"plain:height: 100%"}'
      tagName: ion-row
      ↓GridCol [mobile.components.UIDynamicElement-1587473139329]: 
        beanData: '{"ionBean":"GridCol"}'
        tagName: ion-col
        ↓Attr [mobile.components.UIAttribute-1587473139332]: 
          attrName: 
          attrValue: 
            - xmlizable: 
              - ↑classname: com.twinsoft.convertigo.beans.mobile.components.MobileSmartSourceType
              - MobileSmartSourceType: plain:text-right
        ↓Button1 [mobile.components.UIDynamicElement-1587472003116]: 
          beanData: '{"ionBean":"Button"}'
          tagName: button
          ↓Text [mobile.components.UIText-1587472003119]: 
            textValue: 
              - xmlizable: 
                - ↑classname: com.twinsoft.convertigo.beans.mobile.components.MobileSmartSourceType
                - MobileSmartSourceType: plain:go
          ↓Event [mobile.components.UIControlEvent-1587472003122]: 
            ↓Log [mobile.components.UIDynamicAction-1587472003137]: 
              beanData: '{"ionBean":"LogAction","message":"plain:COUNTING ITEMS"}'
              ↓IterateAction1 [mobile.components.UIDynamicIterate-1587472003140]: 
                beanData: '{"ionBean":"IterateAction","items":"script:new Array(50)"}'
                ↓Loop_Handler [mobile.components.UIActionLoopEvent-1587472003143]: 
                  ↓SetGlobal [mobile.components.UIDynamicAction-1587472003146]: 
                    beanData: |
                      '{
                       "ionBean": "SetGlobalAction",
                       "Property": "plain:countItem",
                       "Value": "script:index"
                      }'
                  ↓PauseAction [mobile.components.UIDynamicAction-1587472003149]: 
                    beanData: '{"ionBean":"PauseAction","duration":"plain:125"}'
↓UseSharedComponent [mobile.components.UIUseShared-1586262122163]: 
  sharedcomponent: MobileBuilderComponents.MobileApplication.Application.Footer